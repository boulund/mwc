version: 2.0

jobs:
    setup_snakemake:
        docker:
            - image: continuumio/miniconda3:4.7.10
        working_directory: ~/stag-mwc
        steps:
            - run:
                name: Install Snakemake
                command: |
                  conda info -a 
                  conda config --add channels defaults
                  conda config --add channels conda-forge
                  conda config --add channels bioconda
                  conda create -q -y -n snakemake python=3.7 snakemake=5.6.0
            - save_cache:
                key: v1-snakemake-5.6.0-{{ .Environment.CIRCLE_SHA1 }}
                paths: 
                    - /opt/conda
    bundle_dependencies:
        docker:
            - image: continuumio/miniconda3:4.7.10
        working_directory: ~/stag-mwc
        steps:
            - run:
                name: Bundle test data
                command: |
                    #git clone https://github.com/ctmrbio/stag-mwc_test_data input
                    mkdir -pv input
                    touch input/test1_1.fq.gz input/test1_2.fq.gz
                    touch input/test2_1.fq.gz input/test2_2.fq.gz
            - save_cache:
                key: v1-stag-mwc_test_data-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - ~/stag-mwc/input
    checkout_code:
        docker:
            - image: continuumio/miniconda3:4.7.10
        working_directory: ~/stag-mwc
        steps:
            - checkout
            - run:
                name: Placeholder database files
                command: |
                    mkdir -pv ~/stag-mwc/db/hg19
                    mkdir -pv ~/stag-mwc/db/metaphlan2
                    touch ~/stag-mwc/db/hg19/taxo.k2d
                    touch ~/stag-mwc/db/metaphlan2/test.1.bt2
            - save_cache:
                key: v1-stag-mwc_with_dbs-{{ .Revision }}
                paths:
                    - ~/stag-mwc
    validate_syntax_and_dag:
        docker:
            - image: continuumio/miniconda3:4.7.10
        working_directory: ~/stag-mwc
        steps:
            - restore_cache:
                key: v1-snakemake-5.6.0-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: v1-stag-mwc_test_data-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: v1-stag-mwc_with_dbs-{{ .Revision }}
            - run:
                name: Validate syntax and DAG
                command: |
                    sed -i 's/assess_depth: False/assess_depth: True/' config.yaml
                    sed -i 's/sketch_compare: False/sketch_compare: True/' config.yaml
                    sed -i 's/kaiju: False/kaiju: True/' config.yaml
                    sed -i 's/kraken2: False/kraken2: True/' config.yaml
                    sed -i 's/metaphlan2: False/metaphlan2: True/' config.yaml
                    sed -i 's/humann2: False/humann2: True/' config.yaml
                    sed -i 's/groot: False/groot: True/' config.yaml
                    sed -i 's/amrplusplus: False/amrplusplus: True/' config.yaml
                    sed -i 's/assembly: False/assembly: True/' config.yaml
                    sed -i 's/binning: False/binning: True/' config.yaml
                    sed -i 's|db_path: \"\"|db_path: \"db/hg19\"|' config.yaml
                    sed -i 's|db: \"\"|db: \"db\"|' config.yaml
                    sed -i 's|bt2_db_dir: \"\"|bt2_db_dir: \"db/metaphlan2\"|' config.yaml
                    sed -i 's|bt2_index: \"\"|bt2_index: \"test\"|' config.yaml
                    sed -i 's|_db: \"\"|_db: \"db\"|' config.yaml
                    sed -i 's|    index: \"\"|    index: \"db\"|' config.yaml
                    sed -i 's|kmer_distrib: \"\"|kmer_distrib: \"db\"|' config.yaml
                    cat config.yaml
                    source activate snakemake
                    snakemake --use-conda --dryrun

workflows:
    version: 2
    validate_syntax_and_dag:
        jobs:
            - setup_snakemake
            - bundle_dependencies
            - checkout_code
            - validate_syntax_and_dag:
                requires:
                    - setup_snakemake
                    - bundle_dependencies
                    - checkout_code

